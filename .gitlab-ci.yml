# NOTE: The following variables are required for this pipeline to work
# GIT_COMMIT_USER: The username of the gitlab user that will be used to push tags
# GIT_COMMIT_EMAIL: The email of the gitlab user that will be used to push tags

include:
  - local: '.gitlab/templates.yml'

image: python:3.11

stages:
  - general
  - trigger

# Pipeline rules
workflow:
  rules:
    # Skip CI if commit message contains with [skip-ci]
    - if: '$CI_COMMIT_MESSAGE =~ /\[skip-ci\]/'
      when: never
      # Prevent running a push pipeline for a release commit that's not a tag
    - if: $CI_COMMIT_MESSAGE =~ /^chore\(release\):.*/ && $CI_COMMIT_TAG == null
      when: never
      # If a push to branch with open merge request then ignore
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
      # If source is push and no open merge request then run
    - if: $CI_COMMIT_BRANCH
      # Run tag pipelines
    - if: $CI_COMMIT_TAG

variables:
  VERSION_ENV_FILE: .version
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  UV_CACHE_DIR: "$CI_PROJECT_DIR/.cache/uv"
  CI_GHCR_IMAGE: ${CI_GHCR_REGISTRY}/${CI_GHCR_REPO}

build-env:
  stage: .pre
  script:
    - python -m venv .venv/
    - source .venv/bin/activate
    - pip install -U pip uv
    - uv sync --refresh
    - uv cache prune --ci
    # Install go-task
    - sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b .
  rules:
      # If project dependencies were changed then run
    - changes:
      - pyproject.toml
      - uv.lock
      - flowdapt/
      when: always
      # If .venv exists then skip
    - exists:       
      - .venv/
      when: never
    # Default to manual, but continue
    # pipeline if not run
    - when: manual
      allow_failure: true


default-pipeline:
  stage: general
  trigger:
    include: .gitlab/default.yml
    strategy: depend
  rules:
    - if: !reference [.is_side_branch, if]
      when: on_success
    - when: never

stable-pipeline:
  stage: trigger
  trigger:
    include: .gitlab/stable.yml
    strategy: depend
  rules:
    - if: !reference [.is_main_branch, if]
      when: on_success
    - when: never

release-pipeline:
  stage: trigger
  trigger:
    include: .gitlab/release.yml
    strategy: depend
  rules:
    - if: !reference [.is_tag_pipeline, if]
      when: on_success
    - when: never
